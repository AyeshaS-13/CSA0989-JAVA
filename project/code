
import java.util.*;

public class TrafficSignal { final int LINES = 3;
 private static 
 int BUSES = 20;
 int[][][] dp;
 int MAX_VEHICLES = 10;
 void initializeDP() {
 dp = new int[MAX_VEHICLES+1][MAX_VEHICLES+1][MAX_VEHICLES+1];
 for (int[][]layer : dp) {
 for (int[]row:layer) {
  Arrays.fill(row, Integer.MAX_VALUE);
  }
  }
  dp[0][0][0] = 0;
    }
   private static int minimumWaitingTime(int[]queueLengths) {
   for (int i=0;i<=queueLengths[0];i++) {
   for (int j=0;j<=queueLengths[1];j++) {
   for (int k=0;k<=queueLengths[2];k++) {
   if (dp[i][j][k]==Integer.MAX_VALUE)continue;
   if (i>0) {
   dp[i][j][k]=Math.min(dp[i][j][k],dp[i-1][j][k]+i);
   }
  if (j>0) {
  dp[i][j][k]=Math.min(dp[i][j][k],dp[i][j-1][k]+j);
  }
  if (k>0) {
 dp[i][j][k]=Math.min(dp[i][j][k],dp[i][j][k-1]+k);
 }
 System.out.println("dp["+i+"]["+j+"]["+k+"]="+dp[i][j][k]);
 }
 }
 }
 return dp[queueLengths[0]][queueLengths[1]][queueLengths[2]];
 }
  public static void main(String[] args) {
  int[] queueLengths = {5,2,6}
  initializeDP();
  int result=minimumWaitingTime(queueLengths);
  System.out.println("Minimum Waiting Time: "+result);
  }
  }
